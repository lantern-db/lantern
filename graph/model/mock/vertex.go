// Code generated by MockGen. DO NOT EDIT.
// Source: ./graph/model/vertex.go

// Package mock_model is a generated GoMock package.
package mock_model

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	model "github.com/lantern-db/lantern/graph/model"
	pb "github.com/lantern-db/lantern/pb"
)

// MockVertex is a mock of Vertex interface.
type MockVertex struct {
	ctrl     *gomock.Controller
	recorder *MockVertexMockRecorder
}

// MockVertexMockRecorder is the mock recorder for MockVertex.
type MockVertexMockRecorder struct {
	mock *MockVertex
}

// NewMockVertex creates a new mock instance.
func NewMockVertex(ctrl *gomock.Controller) *MockVertex {
	mock := &MockVertex{ctrl: ctrl}
	mock.recorder = &MockVertexMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVertex) EXPECT() *MockVertexMockRecorder {
	return m.recorder
}

// AsProto mocks base method.
func (m *MockVertex) AsProto() *pb.Vertex {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AsProto")
	ret0, _ := ret[0].(*pb.Vertex)
	return ret0
}

// AsProto indicates an expected call of AsProto.
func (mr *MockVertexMockRecorder) AsProto() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AsProto", reflect.TypeOf((*MockVertex)(nil).AsProto))
}

// BoolValue mocks base method.
func (m *MockVertex) BoolValue() (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BoolValue")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BoolValue indicates an expected call of BoolValue.
func (mr *MockVertexMockRecorder) BoolValue() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BoolValue", reflect.TypeOf((*MockVertex)(nil).BoolValue))
}

// BytesValue mocks base method.
func (m *MockVertex) BytesValue() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BytesValue")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BytesValue indicates an expected call of BytesValue.
func (mr *MockVertexMockRecorder) BytesValue() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BytesValue", reflect.TypeOf((*MockVertex)(nil).BytesValue))
}

// Expiration mocks base method.
func (m *MockVertex) Expiration() model.Expiration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Expiration")
	ret0, _ := ret[0].(model.Expiration)
	return ret0
}

// Expiration indicates an expected call of Expiration.
func (mr *MockVertexMockRecorder) Expiration() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Expiration", reflect.TypeOf((*MockVertex)(nil).Expiration))
}

// Float32Value mocks base method.
func (m *MockVertex) Float32Value() (float32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Float32Value")
	ret0, _ := ret[0].(float32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Float32Value indicates an expected call of Float32Value.
func (mr *MockVertexMockRecorder) Float32Value() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Float32Value", reflect.TypeOf((*MockVertex)(nil).Float32Value))
}

// Float64Value mocks base method.
func (m *MockVertex) Float64Value() (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Float64Value")
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Float64Value indicates an expected call of Float64Value.
func (mr *MockVertexMockRecorder) Float64Value() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Float64Value", reflect.TypeOf((*MockVertex)(nil).Float64Value))
}

// Int64Value mocks base method.
func (m *MockVertex) Int64Value() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Int64Value")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Int64Value indicates an expected call of Int64Value.
func (mr *MockVertexMockRecorder) Int64Value() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Int64Value", reflect.TypeOf((*MockVertex)(nil).Int64Value))
}

// IntValue mocks base method.
func (m *MockVertex) IntValue() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IntValue")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IntValue indicates an expected call of IntValue.
func (mr *MockVertexMockRecorder) IntValue() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IntValue", reflect.TypeOf((*MockVertex)(nil).IntValue))
}

// Key mocks base method.
func (m *MockVertex) Key() model.Key {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Key")
	ret0, _ := ret[0].(model.Key)
	return ret0
}

// Key indicates an expected call of Key.
func (mr *MockVertexMockRecorder) Key() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Key", reflect.TypeOf((*MockVertex)(nil).Key))
}

// NilValue mocks base method.
func (m *MockVertex) NilValue() (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NilValue")
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NilValue indicates an expected call of NilValue.
func (mr *MockVertexMockRecorder) NilValue() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NilValue", reflect.TypeOf((*MockVertex)(nil).NilValue))
}

// StringValue mocks base method.
func (m *MockVertex) StringValue() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StringValue")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StringValue indicates an expected call of StringValue.
func (mr *MockVertexMockRecorder) StringValue() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StringValue", reflect.TypeOf((*MockVertex)(nil).StringValue))
}

// TimeValue mocks base method.
func (m *MockVertex) TimeValue() (time.Time, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TimeValue")
	ret0, _ := ret[0].(time.Time)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TimeValue indicates an expected call of TimeValue.
func (mr *MockVertexMockRecorder) TimeValue() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TimeValue", reflect.TypeOf((*MockVertex)(nil).TimeValue))
}

// Value mocks base method.
func (m *MockVertex) Value() model.Value {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Value")
	ret0, _ := ret[0].(model.Value)
	return ret0
}

// Value indicates an expected call of Value.
func (mr *MockVertexMockRecorder) Value() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Value", reflect.TypeOf((*MockVertex)(nil).Value))
}
